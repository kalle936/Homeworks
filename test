
package lab1;

import java.util.Scanner;

public class TowersOfHanoi {
        
        //variabler som gör det snabbare att få svar  på hur många
        //moves som gjorts samt en variabel för antal disks
	static int moves = 0;
	static int totalDisks = 0;

	public static void main(String[] args) throws java.io.IOException {
                Scanner in = new Scanner(System.in);
                
                //skapar "pinnarna" som ringarna ska förflyttas på
		char sourcePole = 'A';
		char destinationPole = 'B';
		char assistPole = 'C';
                
                //frågar hur många ringar man vill använda
                System.out.println("How many disks?: ");
                int disks = in.nextInt();
		totalDisks = disks;
                
                //anrop till metoden som ska lösa uppgiften
		solveHanoi(disks, sourcePole, destinationPole, assistPole);
		System.out.println();
		System.out.println("\nAmount of moves: " + moves + "\n");
		}
        
        //metod som ska lösa problemet. den anropar sig själv(rekursiv) och tar in pinnarna och
        //antal ringar som parametrar
	static void solveHanoi(int disks, char sourcePole, char destinationPole, char assistPole) {
		if (disks >= 1) {
                        //metoden anropar sig själv för att komma till det enklaste
                        //valet (ring #1)
			solveHanoi(disks-1, sourcePole, assistPole, destinationPole);
                        //flytta disken
			moveDisk(sourcePole, destinationPole);
                        //om det finns ring med mindre värde än den som flyttades så
                        //ska dessa flyttas så de ligger på varandra
			solveHanoi(disks-1, assistPole, destinationPole, sourcePole);
			}
		}
        //metod som används för att skriva ut (simulera) förflyttningen av ringarna
	static void moveDisk(char fromPole, char toPole) {
		moves++;
                
                //if sats som ska förhindra att det skrivs ut för många steg (om man har 10 eller
                //fler ringar. 1000+ förflyttningar
		if(totalDisks < 10){
			System.out.print("Move from " + fromPole + " to " + toPole + ".\n ");
                        //efter 4 förflyttningar kommer en tom rad läggas in så det blir mer överskådligt
			if (moves%4 == 0){
				System.out.println();
				}
			}
		}
	}
